# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ "i915" ];
  boot.kernelModules = [ "kvm-intel" "i915"];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [ "i915.force_probe=46a6" ];

  services.xserver.videoDrivers = [ "nvidia" ];

  hardware = {
    # nvidia.modesetting.enable = true;
    nvidia.prime.sync.enable = true;
    nvidia.prime.intelBusId = "PCI:0:2:0";
    nvidia.prime.nvidiaBusId = "PCI:3:0:0";
    # opengl = {
    #   extraPackages = [
    #     pkgs.mesa.drivers
    #     pkgs.linuxPackages.nvidia_x11.out
    #     pkgs.vaapiIntel
    #     pkgs.vaapiVdpau
    #     pkgs.libvdpau-va-gl
    #   ];
    #   driSupport = true;
    #   driSupport32Bit = true;
    # };
  };




  fileSystems."/" =
    { device = "/dev/mapper/enc-pv";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  boot.initrd.luks.devices."enc-pv".device = "/dev/disk/by-uuid/50b1f201-1dfb-481b-9449-4a4d3d4d7221";

  fileSystems."/home" =
    { device = "/dev/mapper/enc-pv";
      fsType = "btrfs";
      options = [ "subvol=@home" ];
    };

  fileSystems."/.snapshots" =
    { device = "/dev/mapper/enc-pv";
      fsType = "btrfs";
      options = [ "subvol=@snapshots" ];
    };

  fileSystems."/.swapfile" =
    { device = "/dev/mapper/enc-pv";
      fsType = "btrfs";
      options = [ "subvol=@swapfile" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/DF41-CB64";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp82s0u2u4.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
